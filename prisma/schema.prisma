// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id              String         @id
  luckyDrawNumber Int            @default(autoincrement())
  sessions        Session[]
  email           String         @unique
  userProgress    UserProgress[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model LoginToken {
  id      String   @id @default(cuid())
  token   String   @unique
  email   String
  expires DateTime
}

model QuestionSet {
  id           String         @id @default(cuid())
  title        String
  questions    Question[]
  userProgress UserProgress[]
  Video        Video[]
}

model Video {
  id            String      @id @default(cuid())
  title         String
  url           String
  questionSet   QuestionSet @relation(fields: [questionSetId], references: [id])
  questionSetId String
}

model Question {
  id            String      @id @default(cuid())
  text          String
  questionSet   QuestionSet @relation(fields: [questionSetId], references: [id])
  options       String[]
  correctAnswer String
  questionSetId String
}

model UserProgress {
  id               String      @id @default(cuid())
  user             User        @relation(fields: [userId], references: [id])
  userId           String
  questionSet      QuestionSet @relation(fields: [questionSetId], references: [id])
  questionSetId    String
  allVideosWatched Boolean     @default(false)
  points           Int         @default(0)
  completed        Boolean     @default(false)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt

  @@unique([userId, questionSetId])
}
